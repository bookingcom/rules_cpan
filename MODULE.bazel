module(
    name = "rules_cpan",
    version = "1.1.0",
)

bazel_dep(name = "rules_perl", version = "0.2.4")
bazel_dep(name = "aspect_rules_py", version = "1.3.2")
bazel_dep(name = "aspect_bazel_lib", version = "2.13.0")
bazel_dep(name = "rules_python", version = "1.2.0-rc0")
bazel_dep(name = "bazel_skylib", version = "1.7.1")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = False,
    is_default = True,
    python_version = "3.13.1",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip",
    python_version = "3.13.1",
    requirements_lock = "//:requirements_lock.txt",
    requirements_windows = "//:requirements_windows.txt",
)

# Imports the pip toolchain generated by the given module extension into the scope of the current module.
use_repo(pip, "pip")

# generation of starlark files
bazel_dep(name = "gazelle", version = "0.42.0", dev_dependency = True)
bazel_dep(name = "rules_python_gazelle_plugin", version = "1.2.0-rc0", dev_dependency = True)
bazel_dep(name = "rules_multirun", version = "0.10.0", dev_dependency = True)

# linter for starlark files
bazel_dep(name = "buildifier_prebuilt", version = "8.0.1", dev_dependency = True)
